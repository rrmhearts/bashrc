#!/usr/bin/env bash

echo "Loading functions..."

# clean ram. set swappiness to 10
cleanmemory() {
	free_data="$(free)"
	mem_data="$(echo "$free_data" | grep 'Mem:')"
	free_mem="$(echo "$mem_data" | awk '{print $4}')"
	buffers="$(echo "$mem_data" | awk '{print $6}')"
	cache="$(echo "$mem_data" | awk '{print $7}')"
	total_free=$((free_mem + buffers + cache))
	used_swap="$(echo "$free_data" | grep 'Swap:' | awk '{print $3}')"
	
	echo -e "Free memory:\t$total_free kB ($((total_free / 1024)) MB)\nUsed swap:\t$used_swap kB ($((used_swap / 1024)) MB)"
	echo 
	# swap to ram
	if [[ $used_swap -lt $total_free ]]; then
		sudo sh -c "echo 0 > /proc/sys/vm/swappiness"
	fi
	# clean cache 
	sudo sh -c "free && sync && echo 3 > /proc/sys/vm/drop_caches swapon -a && printf '\n\n%s\n\n' 'Ram-cache Cleared, Swap on' && free"
	sudo sh -c "echo 10 > /proc/sys/vm/swappiness"

}

# csearch function
csrch() {
	if [ "$1" == "-h" -o "$#" -lt 2 ]; then
		echo "Usage: 'csearch dir search_phrase' Lists files containing phrase"
	else
		grep --include=\*.{c,cpp,h} -rnw "$1" -e "$2"
	fi
}

# expand to full path
expandpath() {
  case $1 in
    ~[+-]*)
      local content content_q
      printf -v content_q '%q' "${1:2}"
      eval "content=${1:0:2}${content_q}"
      printf '%s\n' "$content"
      ;;
    ~*)
      local content content_q
      printf -v content_q '%q' "${1:1}"
      eval "content=~${content_q}"
      printf '%s\n' "$content"
      ;;
    *)
      eval "content=$(readlink -e "$1")"
      printf '%s\n' "$content"
      ;;
  esac
}

extract() {
 if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
    return 1
 else
    for n in $@
    do
      if [ -f "$n" ] ; then
          case "${n%,}" in
            *.tar.bz2|*.tar.gz|*.tar.xz|*.tbz2|*.tgz|*.txz|*.tar) 
                         tar xvf "$n"       ;;
            *.lzma)      unlzma ./"$n"      ;;
            *.bz2)       bunzip2 ./"$n"     ;;
            *.rar)       unrar x -ad ./"$n" ;;
            *.gz)        gunzip ./"$n"      ;;
            *.zip)       unzip ./"$n"       ;;
            *.z)         uncompress ./"$n"  ;;
            *.7z|*.arj|*.cab|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.rpm|*.udf|*.wim|*.xar)
                         7z x ./"$n"        ;;
            *.xz)        unxz ./"$n"        ;;
            *.exe)       cabextract ./"$n"  ;;
            *)
                         echo "extract: '$n' - unknown archive method"
                         return 1
                         ;;
          esac
      else
          echo "'$n' - file does not exist"
          return 1
      fi
    done
fi
}

files() {
	if [ "$#" -eq 0 ]; then
	   gnome-open . 2> /dev/null & disown
	elif [ "$1" == "-h" ]; then
	   echo "Usage: 'files [dir]' Open directory in Files app"
	else
	   gnome-open $1 2> /dev/null & disown
	fi
}

gebit() {
	gedit "$@" & disown
}

gfiles() {
	if [ "$1" == "-h" -o "$#" -lt 2 ]; then
                echo "Usage: 'gfiles search_phrase regex_files' Lists search_phrase in regex_files"
        else
		find . -iname "$2" -exec grep -i "$1" {} + 2> >(grep -Ev "Permission denied|Is a directory") | grep -v "Binary file"
	fi
}

giveme() {
	sudo apt install "$@"
}

psg() {
        if [ ! -z $1 ] ; then
                ps aux | grep $1 
        else
                echo "Usage: 'psg psname' # Need name to grep for"
        fi
}

repeat() {
	local _
	for _ in $(seq $1); do
		eval "$2"
	done
}

replacestr() {
        if [ "$1" == "-h" -o "$#" -lt 3 ]; then
                echo "Usage: 'replacestr dir/ oldstring newstring"
        else
                grep -rl "$2" "$1" | xargs sed -i "s/$2/$3/g"
        fi

}

# Replace "rm" command so that files are disposed to the
# user's Gnome trash can.

rmfile() {
   echo "removing $1" 
   type=`/usr/bin/stat --printf="%F" "$1"`

   if [ "$type" == "directory" ]; then
        echo -n "rm: cannot remove \`"
        echo -n $1
        echo "\`: Is a directory"
   else
        dir=`/usr/bin/dirname "$1"`
        file=`/usr/bin/basename "$1"`
        info=${HOME}/.local/share/Trash/info/"$file".trashinfo

        cd "$dir"

        /bin/cp "$file" ${HOME}/.local/share/Trash/files
        /bin/rm -f "$file"

        echo "[Trash Info]"                > "$info"
        echo "Path=$PWD/$file"            >> "$info"
        echo "DeletionDate=`date +%FT%T`" >> "$info"

        cd "$OLDPWD"
   fi
}

rmfiles() {
   for file in "$@"
   do
        rmSinglefile $file
   done
}

showme() {
   PAKS="$@"
   for i in $PAKS
   do
      sudo apt search $i
   done
}

up()
{
    for i in `seq 1 $1`;
    do
        cd ../
    done;
}

upgrademe() {
	sudo apt update
	yes | sudo apt upgrade
	sudo apt autoremove
	sudo apt autoclean
}




